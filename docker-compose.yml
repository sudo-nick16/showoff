volumes:
  pgdata:
    driver: local
  mongodata:
    driver: local
  kafkadata:
    driver: local

networks:
  showoff_network:
    name: showoff_net

services:
  apex:
    container_name: apex
    restart: always
    build:
      context: ./apex/
      dockerfile: apex.Dockerfile
    env_file:
      - ./apex/.env
    ports:
      - 6969:6969
    depends_on:
      - kafka
      - postgres
    networks:
      - showoff_network

  stellar:
    container_name: stellar
    restart: always
    env_file:
      - ./stellar/.env
    build:
      context: ./stellar/ 
      dockerfile: stellar.Dockerfile
    depends_on:
      - mongo
      - kafka
    networks:
      - showoff_network

  nimbus:
    container_name: nimbus
    restart: always
    build:
      context: ./nimbus/ 
      dockerfile: nimbus.Dockerfile
    ports:
      - 4200:4200
    networks:
      - showoff_network

  catalyst:
    container_name: catalyst
    restart: always
    build:
      context: ./catalyst/ 
      dockerfile: catalyst.Dockerfile
    depends_on:
      - kafka
    networks:
      - showoff_network

  postgres:
    container_name: postgres
    image: debezium/postgres:13
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=cooldb123
      - POSTGRES_DB=showoff
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - showoff_network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: cooldb123
    volumes:
      - mongodata:/data/db
    ports:
      - 27017:27017
    networks:
      - showoff_network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_MY_ID: 1
    ports:
      - 2181:2181
    networks:
      - showoff_network
    volumes:
      -  ./zoo/data:/var/lib/zookeeper/data
      - ./zoo/log:/var/lib/zookeeper/log


  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=localhost:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_BROKER_ID=2
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
      - 9093:9093
    networks:
      - showoff_network
    volumes:
      - kafkadata:/tmp/kafka-logs/

  debezium:
    container_name: debezium
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: 
      - kafka
    ports:
      - 8083:8083
    networks:
      - showoff_network

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    depends_on: [zookeeper, kafka]
    ports:
      - 8081:8081
    networks:
      - showoff_network
